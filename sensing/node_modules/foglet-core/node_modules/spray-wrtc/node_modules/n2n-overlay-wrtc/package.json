{
  "_args": [
    [
      "n2n-overlay-wrtc@2.0.2",
      "/home/travis/build/RAN3D/foglet-core"
    ]
  ],
  "_from": "n2n-overlay-wrtc@2.0.2",
  "_id": "n2n-overlay-wrtc@2.0.2",
  "_inBundle": true,
  "_integrity": "sha512-YY+l8KbKZQx9EyhaVYB7dq+ET4wnU58DlvNJGGi67a7TXGguBBK3GpagTrsD+b62LiUPDoJVhZo7Ho9d0y2g6g==",
  "_location": "/foglet-core/spray-wrtc/n2n-overlay-wrtc",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "n2n-overlay-wrtc",
    "fetchSpec": "2.0.2",
    "name": "n2n-overlay-wrtc",
    "raw": "n2n-overlay-wrtc@2.0.2",
    "rawSpec": "2.0.2",
    "registry": true,
    "saveSpec": null,
    "type": "version"
  },
  "_requiredBy": [
    "/foglet-core/spray-wrtc"
  ],
  "_resolved": "https://registry.npmjs.org/n2n-overlay-wrtc/-/n2n-overlay-wrtc-2.0.2.tgz",
  "_shrinkwrap": null,
  "_spec": "2.0.2",
  "_where": "/home/travis/build/RAN3D/foglet-core",
  "author": {
    "name": "Chat-Wane"
  },
  "bugs": {
    "url": "https://github.com/ran3d/n2n-overlay-wrtc/issues"
  },
  "bundleDependencies": [
    "debug",
    "lodash",
    "neighborhood-wrtc",
    "uuid"
  ],
  "dependencies": {
    "debug": "^2.6.1",
    "lodash": "^4.17.4",
    "neighborhood-wrtc": "^2.0.1",
    "uuid": "^3.0.1"
  },
  "description": "A WebRTC peer is able to mediate the connection establishment between its neighbors, i.e., it becomes a signaling server for its neighbors. It allows peers to organize their overlay network.",
  "devDependencies": {
    "babel-preset-es2015": "^6.24.1",
    "babelify": "^7.3.0",
    "browserify": "^14.4.0",
    "esdoc": "^0.5.2",
    "esdoc-node": "^1.0.2"
  },
  "homepage": "https://github.com/ran3d/n2n-overlay-wrtc#readme",
  "keywords": [
    "WebRTC",
    "browser-to-browser communication",
    "distributed signaling server",
    "overlay network"
  ],
  "license": "MIT",
  "main": "lib/n2n-overlay.js",
  "name": "n2n-overlay-wrtc",
  "optionalDependencies": {},
  "readme": "# n2n-overlay-wrtc [![Build Status](https://travis-ci.org/RAN3D/n2n-overlay-wrtc.svg?branch=master)](https://travis-ci.org/RAN3D/n2n-overlay-wrtc)\n\nThis project aims to ease the creation of overlay networks on top of\nWebRTC. Additional WebRTC-specific constraints make such projects more difficult\nthan they should be. For instance, establishing a connection requires a\nround-trip of \"offers\". Such messages usually transit a dedicated signaling\nserver. The peers of this project still require a signaling server for their\nentrance in the network. Afterwards, peers become signaling servers too, i.e.,\nthey mediate connections between their direct neighbors.\n\nThis module divides the entering arcs (inview) from the outgoing arcs (outview).\n\nThe way connections are handled are left to the discretion of overlay protocols\nbuilt on top of this module. A peer with two neighbors can ask to one of them to\nconnect to the other. Several overlay network protocols use neighbor-to-neighbor\ninteractions to converge to a topology exposing the desired properties.\n\n## Principle\n\n<p align='center'>\n<img src='./img/signal.png'> </img>\n</p>\n\nThere exists a network comprising at least Peer ```:|```. Peer ```:]``` wants to\njoin this network. ```:|``` knows it and opens an access to the network thanks\nto a signaling server. The signaling server is in charge of transmitting the\nnecessary WebRTC data from both sides. The figure shows this protocol with the\n1->2->3->4 steps that can be repeated many times depending on network\nconfigurations. If the protocol is successful, it creates a direct\nbrowser-to-browser connection from ```:]``` to ```:|```.\n\n<p align='center'>\n<img src='./img/bridge.png'> </img>\n</p>\n\nPeers already in the network do not need to use a signaling server to establish\nconnections, for each of them can act as a signaling server, i.e. as a bridge\nfrom a neighbor to another. In the figure, ```:3```, ```:]```, and ```:|``` are\nin the network. ```:3``` can establish a WebRTC connection to ```:|``` using\n```:]```. Such neighbor-to-neighbor connections are common in distributed\npeer-sampling protocols.\n\n\n## Installation\n\n```$ npm install n2n-overlay-wrtc```\n\n## API\n\nThe API is avalaible [here](https://ran3d.github.io/n2n-overlay-wrtc/)\n\n## Example\n\nA live example is available\n[here](https://ran3d.github.io/n2n-overlay-wrtc/example/browser.html).\n\nThe module [spray-wrtc](https://github.com/ran3d/spray-wrtc) extends\nn2n-overlay-wrtc to implement a random peer-sampling protocol.\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ran3d/n2n-overlay-wrtc.git"
  },
  "scripts": {
    "all": "npm run debug && npm run build && npm run esdoc",
    "build": "browserify -r ./lib/n2n-overlay.js:n2n-overlay-wrtc -t [ babelify --presets [ es2015 ] ] > build/n2n-overlay-wrtc.bundle.js",
    "debug": "browserify -r ./lib/n2n-overlay.js:n2n-overlay-wrtc -t [ babelify --presets [ es2015 ] ] --debug > build/n2n-overlay-wrtc.bundle.debug.js",
    "esdoc": "esdoc && npm run esdoc:example",
    "esdoc:example": "cp -R ./build ./example ./img ./docs",
    "test": "npm run all"
  },
  "version": "2.0.2"
}
