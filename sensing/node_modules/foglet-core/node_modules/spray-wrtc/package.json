{
  "_args": [
    [
      "spray-wrtc@2.0.2",
      "/home/travis/build/RAN3D/foglet-core"
    ]
  ],
  "_from": "spray-wrtc@2.0.2",
  "_id": "spray-wrtc@2.0.2",
  "_inBundle": false,
  "_integrity": "sha512-BAVC0so1q9oByrTHIOg4TWjGepz7nxoBLFV4+Uqu8GSUdJwz1I9237zZEYzVKi1TesZFDsiwN1dlZPaIoQxBMQ==",
  "_location": "/foglet-core/spray-wrtc",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "spray-wrtc",
    "fetchSpec": "2.0.2",
    "name": "spray-wrtc",
    "raw": "spray-wrtc@2.0.2",
    "rawSpec": "2.0.2",
    "registry": true,
    "saveSpec": null,
    "type": "version"
  },
  "_requiredBy": [
    "/foglet-core"
  ],
  "_resolved": "https://registry.npmjs.org/spray-wrtc/-/spray-wrtc-2.0.2.tgz",
  "_shrinkwrap": null,
  "_spec": "2.0.2",
  "_where": "/home/travis/build/RAN3D/foglet-core",
  "author": {
    "email": "grumpy.chat.wane@gmail.com",
    "name": "Chat-Wane"
  },
  "bugs": {
    "url": "https://github.com/ran3d/spray-wrtc/issues"
  },
  "bundleDependencies": [
    "debug",
    "lodash",
    "n2n-overlay-wrtc"
  ],
  "dependencies": {
    "debug": "^2.6.1",
    "lodash": "^4.17.4",
    "n2n-overlay-wrtc": "^2.0.2"
  },
  "description": "Adaptive random peer-sampling protocol running on top of WebRTC",
  "devDependencies": {
    "babel-preset-es2015": "^6.24.1",
    "babelify": "^7.3.0",
    "browserify": "^14.4.0",
    "esdoc": "^0.5.2",
    "esdoc-node": "^1.0.2",
    "p2p-graph": "^1.0.0"
  },
  "homepage": "https://github.com/ran3d/spray-wrtc#readme",
  "keywords": [
    "Adaptive",
    "Random peer-sampling",
    "WebRTC",
    "browser-to-browser communication"
  ],
  "license": "MIT",
  "main": "./lib/spray.js",
  "name": "spray-wrtc",
  "optionalDependencies": {},
  "readme": "# spray-wrtc [![Build Status](https://travis-ci.org/RAN3D/spray-wrtc.svg?branch=master)](https://travis-ci.org/RAN3D/spray-wrtc)\n\n<i>Keywords: Random peer-sampling, adaptive, browser-to-browser communication,\nWebRTC</i>\n\nThis project aims to provide a [WebRTC](http://www.webrtc.org) implementation of\nSpray.\n\nSpray [1] is a random peer-sampling protocol [2] inspired by both Cyclon [3] and\nScamp [4]. It adapts the partial view of each member to the network size using\nlocal knowledge only. Therefore, without any configuration, each peer\nautomatically adjust its functioning to the need of the network.\n\n## Principle\n\n<p align='center'>\n    <img src='./img/joining.gif'/>\n</p>\n\nPeers joining the network inject a logarithmic number of arcs with them. Thus, a\n10-peers network has on average 2.3 connections per peer, a 100-peers network\nhas on average 4.6 connections per peer, a 1000 peers network has on average 6.9\nconnections per peer etc. Consequently, the number of connections scales well in\nterms of number of peers.\n\nThe figure shows that peers are highly clustered. Furthermore, the oldest peers\nhave many outgoing arcs while the newest only has one outgoing arc. To solve\nthis issue, the peers must periodically shuffle their partial view of the\nnetwork.\n\n<p align='center'>\n    <img src='./img/shuffling.gif' />\n</p>\n\nPeriodically, a peer chooses one of its neighbor to exchange with. Both peers\nprovide half of their partial view comprising neighbors chosen at random. Both\npeers disconnect from the neighbors they provided and connect to the neighbors\nthey obtained. Periodic shufflings balance the outgoing arcs among the\npeers. The resulting network has a low clustering coefficient.\n\n## Installation\n\n```$ npm install spray-wrtc```\n\n## API\n\nYou can find the API [here](https://ran3d.github.io/spray-wrtc/).\n\n## Example\n\nA usage example of this module is available [here](https://ran3d.github.io/spray-wrtc/example/browser.html).\n\n## Miscellaneous\n\nPeersim [5] simulations of Spray are available at\n[peersim-spray](https://github.com/justayak/peersim-spray).\n\n## References\n\n[1] B. Nédelec, J. Tanke, D. Frey, P. Molli, and A. Mostéfaoui. Spray: an\nAdaptive Random Peer Sampling Protocol. <i>Technical Report, LINA-University of\nNantes; INRIA Rennes - Bretagne Atlantique, Sept 2015.</i>\n\n[2] M. Jelasity, S. Voulgaris, R. Guerraoui, A.-M. Kermarrec, and M. Van\nSteen. Gossip-based peer sampling. <i>ACM Transactions on Computer Systems\n(TOCS)</i>, 25(3):8, 2007.\n\n[3] S. Voulgaris, D. Gavidia, and M. van Steen. Cyclon: Inexpensive membership\nmanagement for unstructured p2p overlays. <i>Journal of Network and Systems\nManagement</i>, 13(2):197–217, 2005.\n\n[4] A. Ganesh, A.-M. Kermarrec, and L. Massoulié. Peer-to-peer membership\nmanagement for gossip-based protocols. <i>IEEE Transactions on Computers</i>,\n52(2):139–149, Feb 2003.\n\n[5] A. Montresor and M. Jelasity. Peersim: A scalable P2P simulator. <i>Proc. of\nthe 9th Int. Conference on Peer-to-Peer (P2P’09)</i>, pages 99–100, Seattle, WA,\nSept. 2009.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ran3d/spray-wrtc.git"
  },
  "scripts": {
    "all": "npm run debug && npm run build && npm run esdoc",
    "build": "browserify -r ./lib/spray.js:spray-wrtc > build/spray-wrtc.bundle.js",
    "debug": "browserify -r ./lib/spray.js:spray-wrtc --debug > build/spray-wrtc.bundle.debug.js",
    "esdoc": "esdoc && npm run esdoc:example",
    "esdoc:example": "cp -R ./build ./examples ./img ./docs",
    "test": "npm run all"
  },
  "version": "2.0.2"
}
